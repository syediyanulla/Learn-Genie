<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LearnGenie - Login</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.29.0/feather.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
    <style>
        body {
            background-color: #121826; 
            color: #e0e0e0; 
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
        }

        #canvas-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        input {
            background-color: rgba(50, 50, 50, 0.8);
            color: #e0e0e0;
        }

        input::placeholder {
            color: #a0a0a0;
        }

        .content-wrapper {
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .left-section {
            display: none;
        }

        .form-container {
            background: rgba(20, 20, 20, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
        }

        @media (min-width: 1024px) {
            .left-section {
                display: flex;
                flex-direction: column;
                justify-content: center;
                padding: 2rem;
                flex: 1;
            }
        }
    </style>
</head>
<body class="min-h-screen bg-gradient-to-r from-slate-900 via-blue-900 to-indigo-900">
    <div id="canvas-container"></div>

    <div class="content-wrapper">
        <div class="left-section text-white px-8">
            <h1 class="text-5xl font-bold mb-6 text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400">Welcome Back to LearnGenie</h1>
            <div class="space-y-6 max-w-xl">
                <p class="text-xl font-semibold">Transform Any Video Into Learning Materials</p>
                <div class="space-y-4">
                    <div class="flex items-center space-x-3">
                        <i data-feather="map" class="w-6 h-6 text-blue-400"></i>
                        <p>Real-time bus route tracking</p>
                    </div>
                    <div class="flex items-center space-x-3">
                        <i data-feather="clock" class="w-6 h-6 text-blue-400"></i>
                        <p>Accurate arrival time predictions</p>
                    </div>
                    <div class="flex items-center space-x-3">
                        <i data-feather="smartphone" class="w-6 h-6 text-blue-400"></i>
                        <p>Mobile-friendly transit companion</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="flex items-center justify-center p-4 lg:w-1/2">
            <div class="w-full max-w-md p-8 bg-white/10 backdrop-blur-lg rounded-2xl shadow-2xl">
                <div class="text-center mb-8">
                    <div class="text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400 mb-6">
                        LearnGenie
                    </div>
                </div>

                <div id="error-message" class="text-red-500 text-center mb-4"></div>

                <form class="space-y-6" id="login-form">
                    <div>
                        <label for="email" class="block text-white mb-2">Email</label>
                        <input type="email" id="email" class="w-full px-4 py-2.5 rounded-xl bg-white/20 backdrop-blur-lg border border-white/20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Enter your email" required>
                    </div>
                    
                    <div>
                        <label for="password" class="block text-white mb-2">Password</label>
                        <input type="password" id="password" class="w-full px-4 py-2.5 rounded-xl bg-white/20 backdrop-blur-lg border border-white/20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Enter your password" required>
                    </div>

                    <button type="submit" class="w-full py-3 rounded-lg bg-gradient-to-r from-blue-500 to-purple-500 text-white font-semibold hover:from-blue-600 hover:to-purple-600 transition-all" id="submit-btn">
                        <span>Sign In</span>
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </form>

                <div class="my-6 flex items-center">
                    <div class="flex-grow border-t border-white/20"></div>
                    <span class="mx-4 text-gray-400">or</span>
                    <div class="flex-grow border-t border-white/20"></div>
                </div>

                <button id="google-signin" class="bg-white text-gray-800 hover:bg-gray-100 px-6 py-2 rounded-lg w-full flex items-center justify-center space-x-2 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 48 48" aria-hidden="true" class="mr-2">
                        <path fill="#4285F4" d="M45.12 24.5c0-1.56-.14-3.06-.4-4.5H24v8.51h11.84c-.51 2.75-2.06 5.08-4.39 6.64v5.52h7.11c4.16-3.83 6.56-9.47 6.56-16.17z"/>
                        <path fill="#34A853" d="M24 46c5.94 0 10.92-1.97 14.56-5.33l-7.11-5.52c-1.97 1.32-4.49 2.1-7.45 2.1-5.73 0-10.58-3.87-12.32-9.07H4.34v5.7C7.96 41.07 15.4 46 24 46z"/>
                        <path fill="#FBBC05" d="M11.68 28.18c-.44-1.32-.69-2.72-.69-4.18s.25-2.86.69-4.18v-5.7H4.34C2.85 17.09 2 20.45 2 24c0 3.55.85 6.91 2.34 9.88l7.34-5.7z"/>
                        <path fill="#EA4335" d="M24 9.75c3.23 0 6.13 1.11 8.41 3.29l6.31-6.31C34.91 3.18 29.93 1 24 1 15.4 1 7.96 5.93 4.34 14.12l7.34 5.7c1.74-5.2 6.59-9.07 12.32-9.07z"/>
                    </svg>
                    <a href="/auth/google" class="google-btn">
                    <span>Sign in with Google</span>
                    </a>
                </button>
            </div>
        </div>
    </div>

    <script>
        // Feather Icons
        feather.replace();

        // Three.js Setup
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
        const container = document.getElementById('canvas-container');

        renderer.setSize(window.innerWidth, window.innerHeight);
        container.appendChild(renderer.domElement);

        // Particle System
        const particles = new THREE.BufferGeometry();
        const particleCount = 1000;

        const positions = new Float32Array(particleCount * 3);
        const colors = new Float32Array(particleCount * 3);

        for(let i = 0; i < particleCount * 3; i += 3) {
            positions[i] = (Math.random() - 0.5) * 20;
            positions[i + 1] = (Math.random() - 0.5) * 20;
            positions[i + 2] = (Math.random() - 0.5) * 20;
            
            colors[i] = Math.random() * 0.5 + 0.5;
            colors[i + 1] = Math.random() * 0.5 + 0.5;
            colors[i + 2] = Math.random() * 0.5 + 0.5;
        }

        particles.setAttribute('position', new THREE.BufferAttribute(positions, 3));
        particles.setAttribute('color', new THREE.BufferAttribute(colors, 3));

        const particleMaterial = new THREE.PointsMaterial({
            size: 0.05,
            vertexColors: true,
            transparent: true,
            opacity: 0.6
        });

        const particleSystem = new THREE.Points(particles, particleMaterial);
        scene.add(particleSystem);

        camera.position.z = 5;

        // Bus Animation with GSAP
        const busCon = document.getElementById('bus-animation');
        gsap.to(busCon, {
            x: window.innerWidth + 200,
            duration: 10,
            repeat: -1,
            ease: "linear"
        });

        // Animation Loop
        function animate() {
            requestAnimationFrame(animate);
            
            particleSystem.rotation.x += 0.001;
            particleSystem.rotation.y += 0.001;
            
            renderer.render(scene, camera);
        }

        // Responsive Handling
        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });

        animate();

        // Login Form Submission
        document.getElementById('login-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const errorMessage = document.getElementById('error-message');
            const submitBtn = document.getElementById('submit-btn');
            
            try {
                errorMessage.textContent = '';
                submitBtn.disabled = true;
                submitBtn.innerHTML = 'Signing In...';

                const response = await fetch('/api/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, password })
                });

                if (!response.ok) {
                    if (response.headers.get('Content-Type')?.includes('application/json')) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || 'Login failed');
                    } else {
                        throw new Error('Unexpected response format');
                    }
                }

                window.location.href = '/home';
            } catch (error) {
                errorMessage.textContent = error.message;
                console.error('Error:', error);
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = '<span>Sign In</span><i class="fas fa-chevron-right"></i>';
            }
        });

        // Google Sign-In
        document.getElementById('google-signin').addEventListener('click', () => {
            window.location.href = '/auth/google';
        });
    </script>
</body>
</html>